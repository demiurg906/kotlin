package

public inline fun myCatchIOException(/*0*/ block: () -> kotlin.Unit): kotlin.Unit
    CallsInPlace(block, EXACTLY_ONCE)
    blockkotlin.Unit consumes Consumer of IOExceptionkotlin.Unit

public fun test_1(): kotlin.Unit
public fun test_2(): kotlin.Unit
public fun A.throwsIOException(): kotlin.Unit
    Supplier of IOException

public final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
