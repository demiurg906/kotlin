package

public fun buildXY(/*0*/ init: XYBuilder.() -> kotlin.Unit): XY
    CallsInPlace(init, EXACTLY_ONCE)
    initkotlin.Unit requires func needs to be called EXACTLY_ONCE
    initkotlin.Unit requires func needs to be called AT_MOST_ONCE

public fun buildZ(/*0*/ init: ZBuilder.() -> kotlin.Unit): Z
    CallsInPlace(init, EXACTLY_ONCE)
    initkotlin.Unit requires func needs to be called AT_LEAST_ONCE

public fun test_1(/*0*/ x: kotlin.Int): kotlin.Unit
public fun test_2(/*0*/ x: kotlin.Int): kotlin.Unit
public fun test_3(/*0*/ x: kotlin.Int): kotlin.Unit
public fun test_4(/*0*/ x: kotlin.Int): kotlin.Unit

public final data class XY {
    public constructor XY()
    public final /*synthesized*/ fun copy(): XY
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final class XYBuilder {
    public constructor XYBuilder()
    private final var x_: kotlin.Int?
    private final var y_: kotlin.Int?
    public final fun buildXY(): XY
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun setDefaultValY(/*0*/ value: kotlin.Int = ...): kotlin.Unit
        setDefaultValYkotlin.Unit provides func called EXACTLY_ONCE

    public final fun setValX(/*0*/ value: kotlin.Int = ...): kotlin.Unit
        setValXkotlin.Unit provides func called EXACTLY_ONCE

    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final data class Z {
    public constructor Z()
    public final /*synthesized*/ fun copy(): Z
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final class ZBuilder {
    public constructor ZBuilder()
    private final var z_: kotlin.Int?
    public final fun buildZ(): Z
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun setVarZ(/*0*/ value: kotlin.Int = ...): kotlin.Unit
        setVarZkotlin.Unit provides func called EXACTLY_ONCE

    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
